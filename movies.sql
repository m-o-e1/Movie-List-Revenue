CREATE TABLE ACTORS
(ACTORID INT,
 NAME VARCHAR(50),
 BIRTHYEAR YEAR);

 CREATE TABLE DIRECTORS
 (DIRECTORID INT, 
  NAME VARCHAR(50),
  NATIONALITY VARCHAR(80),
  MOVIEID INT);
  
  CREATE TABLE MOVIES
  (MOVIEID INT,
   TITLE VARCHAR(60),
   RELEASEYEAR YEAR,
   GENRE VARCHAR (50));
   
   CREATE TABLE MOVIECAST
   (MOVIEID INT,
    ACTORID INT, 
    ROLE VARCHAR(50));
    
    CREATE TABLE TICKETSALES
    (SALEID INT,
     MOVIEID INT,
     SALEDATE DATE,
     TICKETSOLD CHAR(10),
     TOTALREVENUE CHAR(10));


INSERT INTO ACTORS VALUES
(1,'LEONARDO DICAPRIO',1974),
(2,'AL PACINO',1940),
(3,'CHRISTIAN BALE',1974),
(4,'UMA THURMAN',1970),
(5,'SAMUEL L. JACKSON',1948);

INSERT INTO DIRECTORS VALUES
(1,'CHRISTOPHER NOLAN','BRITISH-AMERICAN',1),
(2,'FRANCIS FORD COPPOLA','AMERICAN',2),
(3,'QUENTIN TARANTINO','AMERICAN',4),
(4,'JAMES CAMERON','CANADIAN',5);

INSERT INTO MOVIECAST VALUES
(1,1,'DOM COBB'),
(2,2,'MICHELLE CORLEONE'),
(3,3,'BRUCE WAYNE'),
(4,4,'MIA WALLACE'),
(5,1,'JACK DAWSON');

INSERT INTO MOVIES VALUES
(1,'INCEPTION',2010,'SCI-FI'),
(2,'THE GODFATHER',1972,'CRIME'),
(3,'THE DARK KNIGHT',2008,'ACTION'),
(4,'PULP FICTION',1994,'CRIME'),
(5,'TITANIC',1997,'ROMANCE');

INSERT INTO TICKETSALES VALUES
(1,1,'2010-07-16','150,000','15,000,000'),
(2,2,'1972-03-24','200,000','25,000,000'),
(3,3,'2008-07-18','180,000','22,000,000'),
(4,4,'1994-10-14','130,000','13,000,000'),
(5,5,'1997-12-19','300,000','35,000,000');


-- 1. LIST ALL MOVIES ALONG WITH DIRECT NAMES --

SELECT MOVIES.TITLE, DIRECTORS.NAME FROM MOVIES 
JOIN DIRECTORS ON MOVIES.MOVIEID = DIRECTORS.MOVIEID;

-- 2. Retrieve and list the name of the actor who played in Titanic --

SELECT ACTORS.NAME, MOVIES.TITLE FROM MOVIES 
JOIN MOVIECAST ON MOVIECAST.MOVIEID = MOVIES.MOVIEID 
JOIN ACTORS ON MOVIECAST.ACTORID = ACTORS.ACTORID 
WHERE MOVIES.TITLE = 'TITANIC';

-- 3. LIST TITLE AND YEAR OF MOVIES AFTER THE YEAR 2000

SELECT MOVIES.TITLE, MOVIES.RELEASEYEAR FROM MOVIES
 WHERE MOVIES.RELEASEYEAR > '2000';

 -- 4. HOW MANY MOVIES DOES EACH GENRE HAVE? --

SELECT MOVIES.GENRE, COUNT(*) AS NUM_OF_MOVIES FROM MOVIES 
GROUP BY MOVIES.GENRE;

-- 5. WHAT IS THE TOTAL REVENUE GENERATED FROM ALL MOVIE SALES --

SELECT SUM(TICKETSALES.TOTALREVENUE) AS TOTAL_SALES FROM TICKETSALES;

-- 6. THE AVERAGE NUMBER OF TICKETS SOLD PER MOVE --

SELECT MOVIES.TITLE, TICKETSALES.TICKETSOLD FROM TICKETSALES
 JOIN MOVIES ON TICKETSALES.MOVIEID = MOVIES.MOVIEID;


-- 7. WHICH MOVIE HAD THE HIGHEST REVENUE TICKET SALES? --

SELECT MOVIES.TITLE, TICKETSALES.TOTALREVENUE FROM 
TICKETSALES JOIN MOVIES ON TICKETSALES.MOVIEID = MOVIES.MOVIEID 
ORDER BY TICKETSALES.TOTALREVENUE DESC
LIMIT 1;


-- 8. FIND THE NUM OF MOVIES THAT SOLD MORE THAN 150,000 TICKETS --

SELECT MOVIES.TITLE, TICKETSALES.TICKETSOLD FROM TICKETSALES
 JOIN MOVIES ON TICKETSALES.MOVIEID = MOVIES.MOVIEID
  WHERE TICKETSALES.TICKETSOLD > '150,000'
   ORDER BY TICKETSALES.TICKETSOLD DESC;


-- 9. LIST ALL MOVIES ALONG WITH THEIR DIRECTORS NAMES --


SELECT MOVIES.TITLE, DIRECTORS.NAME FROM MOVIES
 JOIN DIRECTORS ON DIRECTORS.MOVIEID = MOVIES.MOVIEID;


-- 10. FIND THE ACTORS NAME, ROLE, AND MOVIE THEY PLAYED IN --

SELECT ACTORS.NAME, MOVIECAST.ROLE, MOVIES.TITLE FROM MOVIECAST 
JOIN ACTORS ON ACTORS.ACTORID = MOVIECAST.ACTORID 
JOIN MOVIES ON MOVIES.MOVIEID = MOVIECAST.MOVIEID;


-- 11. SHOW MOVIE TITLE, RELEASE YEAR, TOTAL REVENUE --

SELECT MOVIES.TITLE, MOVIES.RELEASEYEAR, TICKETSALES.TOTALREVENUE FROM MOVIES 
JOIN TICKETSALES ON TICKETSALES.MOVIEID = MOVIES.MOVIEID 
ORDER BY TICKETSALES.TOTALREVENUE ASC;

-- 12. TITLES OF THE MOVIES BEFORE 1995 --

SELECT TITLE, RELEASEYEAR FROM MOVIES WHERE RELEASEYEAR < 1995;


-- 13. LIST THE NAMES OF DIRECTORS OF MOVIES IN THE CRIME GENRE --

SELECT DIRECTORS.NAME, MOVIES.GENRE FROM MOVIES 
JOIN DIRECTORS ON DIRECTORS.MOVIEID = MOVIES.MOVIEID 
WHERE MOVIES.GENRE = 'CRIME';


-- 14. NAME THE ACTORS THAT PLAYED BRUCE WAYNE --

SELECT ACTORS.NAME, MOVIECAST.ROLE FROM MOVIECAST 
JOIN ACTORS ON ACTORS.ACTORID = MOVIECAST.ACTORID 
WHERE MOVIECAST.ROLE = 'BRUCE WAYNE';


-- 15. NAMES OF DIRECT WHOSE TOTALREV> 20,000,000 --

SELECT DIRECTORS.NAME, TICKETSALES.TOTALREVENUE FROM TICKETSALES 
JOIN DIRECTORS ON DIRECTORS.MOVIEID = TICKETSALES.MOVIEID 
WHERE TICKETSALES.TOTALREVENUE > '20,000,000';

-- 16.  CASE(IF/ELSE) FUNCTION SUB SECTION GENRE TO INTENSITY RATE --

SELECT MOVIES.TITLE, MOVIES.GENRE,
CASE 
WHEN GENRE = 'ROMANCE' THEN 'LESS INTENSE'
ELSE 'INTENSE'
END AS 'REVIEW'
FROM MOVIES;